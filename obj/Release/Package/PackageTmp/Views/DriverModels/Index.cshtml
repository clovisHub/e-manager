@using BeesApp.Models
@using Microsoft.AspNet.Identity
@model BeesApp.Models.Shipping

@{
    ViewBag.Title = "Index";

    Model.TempReport = ViewData["drivers"] as ICollection<DeliveriesModel>;
}



<h2>Index</h2>

<div>


</div>


<div>
    @*<p>
            Input field: <input type="text" id="test3" value="Mickey Mouse">
        </p>

        <button id="btn3">Clear Value</button>*@
    <table class="table" id="tableDriver">

        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Drivers)
            </th>
        </tr>
        <tr>
            <th>Driver Names</th>
            @*<th> Telephone</th>*@
        </tr>
        @{

            bool yes = false;

        }

        @for (int x = 0; x < Model.Drivers.Count; x++)
        {
            if (Model.TempReport == null)
            {
                foreach (var driver in Model.Drivers)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => driver.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => driver.PhoneNumber)
                        </td>


                        <td>
                            <button class="button" id="@driver.Id" value="@driver.UserName">Selector</button>
                        </td>
                    </tr>

                }
                break;
            }
            else if (Model.TempReport.Count != 0) // if temp model is not empty
            {
                // Check if a driver name is in the temp model

                foreach (var driver in Model.Drivers)
                {
                    if (driver.UserName.Equals("" + Model.TempReport.ElementAt(x).DriversName))
                    {
                        break;
                    }
                    else
                    {
                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => driver.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => driver.PhoneNumber)
                            </td>


                            <td>
                                <button class="button" id="@driver.Id" value="@driver.UserName">Selector</button>
                            </td>
                        </tr>
                    }
                }
            }
            else
            {
                // Display drivers table if temp model is empty
                foreach (var driver in Model.Drivers)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => driver.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => driver.PhoneNumber)
                        </td>


                        <td>
                            <button class="button" id="@driver.Id" value="@driver.UserName">Selector</button>
                        </td>
                    </tr>

                }

                break;
            }

        }

    </table>
</div>

<div>
    <table class="table" id="tableClient">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Orders)
            </th>
        </tr>
        <tr>
            <th>Client</th>
            <th>Address</th>
            <th>Telephone</th>
            <th>Quantity</th>
            @*<th>Delivered</th>*@
        </tr>
        @{
            var t = "sucks";
            var i = 0;
            var higher = Model.Orders.Count - 1;
            var max = Model.Orders.Count - 1;
            bool oui = false;
        }
        @for (int x = 0; x < Model.Orders.Count; x++)
        {
            
            if (Model.TempReport == null)
            {
                foreach (var item in Model.Orders)
                {
                    <tr>
                        @Html.HiddenFor(modelItem => item.OnlineOrderModelId)
                        <td>
                            @Html.DisplayFor(modelItem => item.ClientName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>

                            @Html.DisplayFor(modelItem => item.Telephone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.QuantityPurchased)
                        </td>

                        @*<td>
                                @Html.DisplayFor(modelItem => item.IsDelivered)
                            </td>*@

                        <td>
                            <input type="Button" alt="@item.QuantityPurchased" class="@item.ClientName" id="@item.OnlineOrderModelId" name="@item.Address" value="Select" />
                        </td>


                    </tr>
                   
                }

                break;

            }
            else if (Model.TempReport.Count != 0)
            {
                foreach (var item in Model.Orders)
                {
                    if (Model.TempReport.ElementAt(x) != null)
                    {
                    }
                    else if (("" + item.OnlineOrderModelId).Equals(Model.TempReport.ElementAt(x).OrdersId))
                    {
                        t = "youpi";
                        
                        break;
                    }
                    else
                    {
                        <tr>
                            @Html.HiddenFor(modelItem => item.OnlineOrderModelId)
                            <td>
                                @Html.DisplayFor(modelItem => item.ClientName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>

                                @Html.DisplayFor(modelItem => item.Telephone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.QuantityPurchased)
                            </td>

                            @*<td>
                                    @Html.DisplayFor(modelItem => item.IsDelivered)
                                </td>*@

                            <td>
                                <input type="Button" alt="@item.QuantityPurchased" class="@item.ClientName" id="@item.OnlineOrderModelId" name="@item.Address" value="Select" />
                            </td>


                        </tr>
                    }

                }
            }
            else
            {
                foreach (var item in Model.Orders)
                {
                    <tr>
                        @Html.HiddenFor(modelItem => item.OnlineOrderModelId)
                        <td>
                            @Html.DisplayFor(modelItem => item.ClientName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>

                            @Html.DisplayFor(modelItem => item.Telephone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.QuantityPurchased)
                        </td>

                        @*<td>
                                @Html.DisplayFor(modelItem => item.IsDelivered)
                            </td>*@

                        <td>
                            <input type="Button" alt="@item.QuantityPurchased" class="@item.ClientName" id="@item.OnlineOrderModelId" name="@item.Address" value="Select" />
                        </td>


                    </tr>

                }

                break;
            }
        }


    </table>
</div>


@using (Html.BeginForm())
{

    <table id="tableSend">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Drivers)</th>
            <th><span label="Address">Address</span> </th>
            <th><span label="Quantity">Quantity</span></th>
            <th><span label="Quantity">Client Name</span></th>
        </tr>

        <tr>
            <td hidden><input type="Text" id="ShipTextDriv1" name="driverId" value="" />
            <td><input type="Text" id="ShipTextDriv2" name="driverName" value="" /></td>

            <td><input type="Text" id="ShipOrder1" name="address" value="" /></td>
            <td><input type="Text" id="ShipOrder2" name="quantity" value="" /></td>
            <td><input type="Text" id="ShipOrder3" name="clientName" value="" /></td>

            <td hidden><input type="hidden" id="ShipOrder4" name="managerName" value="@(User.Identity.GetUserName())" /></td>
            <td hidden><input type="hidden" id="ShipOrder5" name="dateAndHour" value="@(String.Format("{0:M/d/yyyy HH:mm:ss}",DateTime.Now))" /></td>
            <td hidden><input type="hidden" id="ShipOrder6" name="orderId" value="" /></td>


            <td><input type="button" id="ClearInfo" value="Clear" /></td>
        </tr>
        <tr></tr>
        <tr>
            <td><input type="Submit" id="SendInfo" value="Submit" /></td>

        </tr>

    </table>
}


<script>

    $(document)
        .ready(function () {

            $("#tableDriver button")
                .click(function () {


                    var index = $(this).attr('value');
                    var driverId = $(this).attr('id');

                    // $("#test3").val(index);
                    $("#ShipTextDriv1").val(driverId).change();
                    $("#ShipTextDriv2").val(index).change();

                    
                });

            $("#tableClient input")
                .click(function () {

                    var onlineOrder = $(this).attr('id');
                    var address = $(this).attr('name');
                    var quantity = $(this).attr('alt');
                    var client = $(this).attr('class');

                    $("#ShipOrder1").val(address).change();

                    $("#ShipOrder2").val(quantity).change();

                    $("#ShipOrder3").val(client).change();

                    $("#ShipOrder6").val(onlineOrder).change();

                });



            $("#btn3").click(function () {

                $("#test3").val("");
            });

            $("#ClearInfo")
                .click(function () {

                    $("#ShipTextDriv1").val("");
                    $("#ShipTextDriv2").val("");

                    $("#ShipOrder1").val("");
                    $("#ShipOrder2").val("");
                    $("#ShipOrder3").val("");
                    // $("#ShipOrder4").val("");
                    // $("#ShipOrder5").val("");
                    $("#ShipOrder6").val("");

                });

            $("#sendInfo").click(function () {


            });
        });

</script>











